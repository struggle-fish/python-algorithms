'''
哈希表的应用- 集合与字典

字典与集合都是通过哈希表来实现的：
a = { 'name': '小铜钱', 'age': 18, 'gender': '男' }

使用哈希表存储字典，通过哈希函数将字典的键映射为下标。
假设  h('name')=3  h('age') = 1  h('gender') = 4
则哈希表存储为[None, 18, None, '小铜钱', '男']

如果发生哈希冲突，则通过拉链法或开放寻址法解决


哈希表的应用- md5算法
MD5(Message-Digest Algorithm 5)曾经是密码学中常用的哈希函数，可以把任意长度的数据映射为 128 位的哈希值，其曾经包含如下特征：
1、同样的信息，其MD5值必定相同
2、可以快速计算出任意给定消息的MD5值
3、除非暴力的枚举所有可能的消息，否则不可能从哈希值反推出消息本身
4、两条消息之间即使只有微小的差别，其对应MD5值也应该是完全不同，完全不相关的
5、不能在有意义的时间内人工的构造两个不同的消息，使其具有相同的MD5值

应用举例：文件的哈希值
算出文件的哈希值，若两个文件的哈希值相同，则可认为这两个文件是相同的。因此：
1、用户可以利用他来验证下载的文件是否完整
2、云存储服务商可以利用他来判断用户要上传的文件是否已经存在于服务器上，从而实现秒传的功能，同时避免存储过多相同的文件副本

哈希表的应用- SHA2算法
历史上MD5和SHA-1曾经是使用最广泛的cryptographic hash function ，但是随着密码学的发展，这两个哈希函数的安全性相继受到了各种挑战。

因此现在安全性比较重要的场合推荐使用SHA-2等新的更安全的哈希函数

SHA-2包含了一系列的哈希函数：SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, SHA-512/256
对应的哈希值长度分别为 224，256， 384， 512

SHA-2具有和MD5类似的性质

SHA-2应用举例：
例如，在比特币系统中，所有参与者需要共同解决如下问题：对于一个给定的字符串U，给定的目标哈希值H，需要计算出一个字符串V，
使得U+V的哈希值与H的差小于一个给定值D。此时，只能通过暴力枚举V来进行猜测。首先计算出结果的人可或得一定奖金。而某人首先
计算成功的概率与其拥有的计算量成正比，所以其获得的奖金的期望值与其拥有的计算量成正比。


'''